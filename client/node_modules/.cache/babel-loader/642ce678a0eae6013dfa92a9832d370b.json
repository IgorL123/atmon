{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zeden\\\\WebstormProjects\\\\to-do-track\\\\client\\\\src\\\\pages\\\\DetailPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useHttp } from \"../hooks/http.hook\";\nimport { useCallback } from \"react\";\nimport { AuthContext } from \"../context/AuthContex\";\nimport { useEffect } from \"react/cjs/react.production.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DetailPage = () => {\n  _s();\n\n  const {\n    token\n  } = useContext(AuthContext);\n  const {\n    request,\n    loading\n  } = useHttp();\n  const [link, setLink] = useState(null);\n  const linkId = useParams().id; // id модели - ссылки\n\n  const getLink = useCallback(async () => {\n    try {\n      const fetched = await request(`/api/link/${linkId}`, 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      setLink(fetched);\n    } catch (e) {}\n  }, [token, linkId, request]);\n  useEffect(() => {\n    getLink();\n  }, [getLink]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Detail Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DetailPage, \"XO3liI/dGvGB4cCA0xMAaLwhXDQ=\", false, function () {\n  return [useHttp, useParams];\n});\n\n_c = DetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailPage\");","map":{"version":3,"sources":["C:/Users/Zeden/WebstormProjects/to-do-track/client/src/pages/DetailPage.js"],"names":["React","useParams","useHttp","useCallback","AuthContext","useEffect","DetailPage","token","useContext","request","loading","link","setLink","useState","linkId","id","getLink","fetched","Authorization","e"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,SAAR,QAAwB,gCAAxB;;AAGA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAACC,IAAAA;AAAD,MAAUC,UAAU,CAACJ,WAAD,CAA1B;AACA,QAAM;AAACK,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBR,OAAO,EAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMC,MAAM,GAAGb,SAAS,GAAGc,EAA3B,CAJ4B,CAIE;;AAG9B,QAAMC,OAAO,GAAGb,WAAW,CAAC,YAAY;AACpC,QAAI;AACA,YAAMc,OAAO,GAAG,MAAMR,OAAO,CAAE,aAAYK,MAAO,EAArB,EAAwB,KAAxB,EAA+B,IAA/B,EAAqC;AAC9DI,QAAAA,aAAa,EAAG,UAASX,KAAM;AAD+B,OAArC,CAA7B;AAGAK,MAAAA,OAAO,CAACK,OAAD,CAAP;AACH,KALD,CAKE,OAAOE,CAAP,EAAU,CACX;AACJ,GAR0B,EAQxB,CAACZ,KAAD,EAAQO,MAAR,EAAgBL,OAAhB,CARwB,CAA3B;AAUAJ,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO;AACV,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAIA,MAAIN,OAAJ,EAAa;AACT,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA9BM;;GAAMJ,U;UAEkBJ,O,EAEZD,S;;;KAJNK,U","sourcesContent":["import React from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useCallback} from \"react\";\r\nimport {AuthContext} from \"../context/AuthContex\";\r\nimport {useEffect} from \"react/cjs/react.production.min\";\r\n\r\n\r\nexport const DetailPage = () => {\r\n    const {token} = useContext(AuthContext)\r\n    const {request, loading} = useHttp()\r\n    const [link, setLink] = useState(null)\r\n    const linkId = useParams().id // id модели - ссылки\r\n\r\n\r\n    const getLink = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(`/api/link/${linkId}`, 'GET', null, {\r\n                Authorization: `Bearer ${token}`\r\n            })\r\n            setLink(fetched)\r\n        } catch (e) {\r\n        }\r\n    } ,[token, linkId, request])\r\n\r\n    useEffect(() => {\r\n        getLink()\r\n    }, [getLink])\r\n\r\n    if (loading) {\r\n        return <Loader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Detail Page</h1>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}